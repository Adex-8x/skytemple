- MapBG:
  - MapBG metadata
  - MapBG warning if rest room (0x08)
  - Save map settings
  - Add / Remove (enable / disable) BPAs
  - Save BPA settings
  - Copy assets for duplicate MapBG file assigments
  - Change single BMA import so, that images don't need to have the same palettes,
    if both contain less than 16 palettes, combine the palettes instead.
  - MapBG full animated export: Palette animations
  - MapBG names and name editing
- SSA map editing
- BGP
- Full color image conversion tool
  - Integrate better tilequant
- Portraits
- str editor
- Sprites
  - Reimplment Sprite Editor

- Saving on close / file close
- Save error handling



- Sprite editing
- Basic dungeon settings (layouts, floors, Pokémon, names, boss fights)
- Editing Dungeon graphics
- Pokémon stat editing
- Integrating Psy's patch for editing lists (most importantly editing actor and object lists)
- Editing items, moves, abilities (text and maybe some settings?)
- Editing the credits
- Editing the personality test and settings for the default Pokémon and avaiable starters



Optional:
- Music editing (this is 100% optional, I'll just link to Psy's tool instead)
- Editing things related to mission generation?

Debugger workflow:
[source map = AST<->ssb | not to be confused with AST<->script line mappings]
- (Current active SSB from memory: Find SSB File in ROM)
- SSBscript:
  - Disassemble SSB
  - Decompile SSBScript
  - Build AST
  - Recompile with source mappings via AST
- ES:
  - If has ES and hashsum of SSB matches ESScript hash:
    - Load stored ES
    - Build AST
    - If source map doesn't exist:
        - Recommpile ES with source mappings via AST
    - If source map exists:
        - Assign source mappings to existing AST
  - Else:
    - Fail, show warning and fall back to SSBScript view

